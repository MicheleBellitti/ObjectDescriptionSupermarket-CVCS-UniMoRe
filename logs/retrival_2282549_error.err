/usr/local/anaconda3/lib/python3.9/site-packages/scipy/__init__.py:155: UserWarning: A NumPy version >=1.18.5 and <1.25.0 is required for this version of SciPy (detected version 1.26.4
  warnings.warn(f"A NumPy version >={np_minversion} and <{np_maxversion}"
/homes/sbghosh/.local/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/homes/sbghosh/.local/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Traceback (most recent call last):
  File "/work/cvcs_2023_group23/ObjectDescriptionSupermarket-CVCS-UniMoRe/retrival.py", line 154, in <module>
    main()
  File "/work/cvcs_2023_group23/ObjectDescriptionSupermarket-CVCS-UniMoRe/retrival.py", line 103, in main
    model_handler = ModelHandler(config)
  File "/work/cvcs_2023_group23/ObjectDescriptionSupermarket-CVCS-UniMoRe/retrival.py", line 29, in __init__
    self.model = self._load_model()
  File "/work/cvcs_2023_group23/ObjectDescriptionSupermarket-CVCS-UniMoRe/retrival.py", line 39, in _load_model
    model.load_state_dict(torch.load(self.config.MODEL_PATH, map_location=self.config.DEVICE))
  File "/homes/sbghosh/.local/lib/python3.9/site-packages/torch/serialization.py", line 809, in load
    return _load(opened_zipfile, map_location, pickle_module, **pickle_load_args)
  File "/homes/sbghosh/.local/lib/python3.9/site-packages/torch/serialization.py", line 1172, in _load
    result = unpickler.load()
  File "/homes/sbghosh/.local/lib/python3.9/site-packages/torch/serialization.py", line 1142, in persistent_load
    typed_storage = load_tensor(dtype, nbytes, key, _maybe_decode_ascii(location))
  File "/homes/sbghosh/.local/lib/python3.9/site-packages/torch/serialization.py", line 1116, in load_tensor
    wrap_storage=restore_location(storage, location),
  File "/homes/sbghosh/.local/lib/python3.9/site-packages/torch/serialization.py", line 1086, in restore_location
    return default_restore_location(storage, str(map_location))
  File "/homes/sbghosh/.local/lib/python3.9/site-packages/torch/serialization.py", line 217, in default_restore_location
    result = fn(storage, location)
  File "/homes/sbghosh/.local/lib/python3.9/site-packages/torch/serialization.py", line 182, in _cuda_deserialize
    device = validate_cuda_device(location)
  File "/homes/sbghosh/.local/lib/python3.9/site-packages/torch/serialization.py", line 166, in validate_cuda_device
    raise RuntimeError('Attempting to deserialize object on a CUDA '
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.
